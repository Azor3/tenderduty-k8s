---
# controls whether the dashboard is enabled.
enable_dashboard: yes
# What TCP port the dashboard will listen on. Only the port is controllable for now.
listen_port: 8888
# hide_logs is useful if the dashboard will be posted publicly. It disables the log feed,
# and obscures most node-related details. Be aware this isn't fully vetted for preventing
# info leaks about node names, etc.
hide_logs: no
# How long to wait before alerting that a node is down.
node_down_alert_minutes: 3
# Node Down alert Pagerduty Severity
node_down_alert_severity: critical

# Should the prometheus exporter be enabled?
prometheus_enabled: yes
# What port should it listen on? For now only port is configurable.
prometheus_listen_port: 28686

# Global setting for pagerduty
pagerduty:
  # Should we use PD? Be aware that if this is set to no it overrides individual chain alerting settings.
  enabled: no
  # This is an API key, not oauth token, more details to follow, but check the v1 docs for more info
  api_key: aaaaaaaaaaaabbbbbbbbbbbbbcccccccccccc
  # Not currently used, but will be soon. This allows setting escalation priorities etc.
  default_severity: alert

# Discord settings
discord:
  # Alert to discord?
  enabled: no
  # The webhook is set by right-clicking on a channel, editing the settings, and configuring a webhook in the intergrations section.
  webhook: https://discord.com/api/webhooks/999999999999999999/zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz

# Telegram settings
telegram:
  # Alert via telegram? Note: also supersedes chain-specific settings
  enabled: yes
  # API key ... talk to @BotFather
  api_key: "TG Api"
  # The group ID for the chat where messages will be sent. Google how to find this, will include better info later.
  channel: "TG Channel"

# Slack settings
slack:
  # Send alerts to Slack?
  enabled: no
  # The webhook can be added in the Slack app directory.
  webhook: https://hooks.slack.com/services/AAAAAAAAAAAAAAAAAAAAAAA/bbbbbbbbbbbbbbbbbbbbbbbb

# Healthcheck settings (dead man's switch)
healthcheck:
  # Send pings to determine if the monitor is running?
  enabled: no
  # URL to send pings to.
  ping_url: https://hc-ping.com/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
  # Rate in which pings are sent in seconds.
  ping_rate: 60

# The various chains to be monitored. Create a new entry for each chain. The name itself can be arbitrary, but a
# user-friendly name is recommended.
chains:
  # The user-friendly name that will be used for labels. Highly suggest wrapping in quotes.
  "Celestia Testnet":
    chain_id: mocha-4
    valoper_address: VALOPER
    public_fallback: yes
    alerts:
      stalled_enabled: yes
      stalled_minutes: 5
      consecutive_enabled: yes
      consecutive_missed: 5
      consecutive_priority: critical
      percentage_enabled: yes
      percentage_missed: 10
      percentage_priority: critical
      alert_if_inactive: yes
      alert_if_no_servers: no
      pagerduty:
        enabled: yes
        api_key: ""
      discord:
        enabled: yes
        webhook: ""
      telegram:
        enabled: yes
        api_key: "TG Api"
        channel: "TG Channel"
    nodes:
      - url: https://rpc-mocha.pops.one:443
        alert_if_down: no
      - url: https://celestia-testnet.brightlystake.com:443
        alert_if_down: no